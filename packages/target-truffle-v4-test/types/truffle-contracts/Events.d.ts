/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { BigNumber } from "bignumber.js";

export interface EventsContract extends Truffle.Contract<EventsInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<EventsInstance>;
}

export interface Event1 {
  name: "Event1";
  args: {
    value1: BigNumber;
    value2: BigNumber;
  };
}

export interface AnonEvent1 {
  name: "AnonEvent1";
  args: {
    value1: BigNumber;
  };
}

export interface Event3_bool_uint256 {
  name: "Event3";
  args: {
    value1: boolean;
    value2: BigNumber;
  };
}

export interface Event3_uint256 {
  name: "Event3";
  args: {
    value1: BigNumber;
  };
}

type Event3 = Event3_bool_uint256 | Event3_uint256;

export interface NoArgsEvent {
  name: "NoArgsEvent";
  args: {};
}

type AllEvents = Event1 | Event3 | NoArgsEvent;

export interface EventsInstance extends Truffle.ContractInstance {
  emit_event1: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  emit_event2: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  emit_anon1: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  emit_event3: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  emit_event3_overloaded: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };
}
