/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TypedEventDescription, TypedFunctionDescription } from ".";

interface KingOfTheHillInterface extends Interface {
  functions: {
    bid: TypedFunctionDescription<{ encode([]: []): string }>;

    highestBid: TypedFunctionDescription<{ encode([]: []): string }>;

    withdraw: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {
    HighestBidIncreased: TypedEventDescription<{
      encodeTopics([bid]: [null]): string[];
    }>;
  };
}

export class KingOfTheHill extends Contract {
  connect(signerOrProvider: Signer | Provider | string): KingOfTheHill;
  attach(addressOrName: string): KingOfTheHill;
  deployed(): Promise<KingOfTheHill>;

  on(event: EventFilter | string, listener: Listener): KingOfTheHill;
  once(event: EventFilter | string, listener: Listener): KingOfTheHill;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): KingOfTheHill;
  removeAllListeners(eventName: EventFilter | string): KingOfTheHill;
  removeListener(eventName: any, listener: Listener): KingOfTheHill;

  interface: KingOfTheHillInterface;

  functions: {
    bid(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

    "bid()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

    highestBid(
      overrides?: UnsignedTransaction
    ): Promise<[string, BigNumber] & { bidder: string; value: BigNumber }>;

    "highestBid()"(
      overrides?: UnsignedTransaction
    ): Promise<[string, BigNumber] & { bidder: string; value: BigNumber }>;

    withdraw(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

    "withdraw()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;
  };

  bid(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  "bid()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  highestBid(
    overrides?: UnsignedTransaction
  ): Promise<[string, BigNumber] & { bidder: string; value: BigNumber }>;

  "highestBid()"(
    overrides?: UnsignedTransaction
  ): Promise<[string, BigNumber] & { bidder: string; value: BigNumber }>;

  withdraw(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  "withdraw()"(overrides?: UnsignedTransaction): Promise<ContractTransaction>;

  filters: {
    HighestBidIncreased(bid: null): EventFilter;
  };

  estimate: {
    bid(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "bid()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    highestBid(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "highestBid()"(overrides?: UnsignedTransaction): Promise<BigNumber>;

    withdraw(overrides?: UnsignedTransaction): Promise<BigNumber>;

    "withdraw()"(overrides?: UnsignedTransaction): Promise<BigNumber>;
  };
}
