/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type Committed = ContractEventLog<{
  whitelist: string[];
  0: string[];
}>;

export interface Issue428Reproduction extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): Issue428Reproduction;
  clone(): Issue428Reproduction;
  methods: {};
  events: {
    Committed(cb?: Callback<Committed>): EventEmitter;
    Committed(options?: EventOptions, cb?: Callback<Committed>): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "Committed", cb: Callback<Committed>): void;
  once(
    event: "Committed",
    options: EventOptions,
    cb: Callback<Committed>
  ): void;
}
