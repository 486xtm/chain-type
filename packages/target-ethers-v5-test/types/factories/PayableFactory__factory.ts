/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  PayableFactory,
  PayableFactoryInterface,
} from "../PayableFactory";
import { Interface } from "@ethersproject/abi";

const _abi = [
  {
    inputs: [],
    name: "newPayable",
    outputs: [
      {
        internalType: "contract Payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class PayableFactory__factory {
  static readonly abi = _abi;
  static get interface(): PayableFactoryInterface {
    return new Interface(_abi) as PayableFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PayableFactory {
    return new Contract(address, _abi, signerOrProvider) as PayableFactory;
  }
}
