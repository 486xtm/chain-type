/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  TransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface DataTypesView extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): DataTypesView;
  clone(): DataTypesView;
  methods: {
    view_address(): TransactionObject<string>;

    view_bool(): TransactionObject<boolean>;

    view_bytes(): TransactionObject<string>;

    view_bytes1(): TransactionObject<string>;

    view_enum(): TransactionObject<string>;

    view_int256(): TransactionObject<string>;

    view_int8(): TransactionObject<string>;

    view_named(): TransactionObject<{
      uint256_1: string;
      uint256_2: string;
      0: string;
      1: string;
    }>;

    view_stat_array(): TransactionObject<string[]>;

    view_string(): TransactionObject<string>;

    view_struct(): TransactionObject<[string, string]>;

    view_tuple(): TransactionObject<{
      0: string;
      1: string;
    }>;

    view_uint256(): TransactionObject<string>;

    view_uint8(): TransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
