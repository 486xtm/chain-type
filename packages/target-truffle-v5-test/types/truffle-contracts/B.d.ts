/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface BContract extends Truffle.Contract<BInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<BInstance>;
}

export interface Committed_uint256 {
  name: "Committed";
  args: {
    timelock: BN;
    0: BN;
  };
}

export interface Committed_address_array {
  name: "Committed";
  args: {
    whitelist: string[];
    0: string[];
  };
}

type Committed = Committed_uint256 | Committed_address_array;

type AllEvents = Committed;

export interface BInstance extends Truffle.ContractInstance {
  methods: {};

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
