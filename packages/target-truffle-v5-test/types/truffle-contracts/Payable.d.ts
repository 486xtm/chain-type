/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";

export interface PayableContract extends Truffle.Contract<PayableInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<PayableInstance>;
}

type AllEvents = never;

export interface PayableInstance extends Truffle.ContractInstance {
  payable_func: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  non_payable_func: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };
}
