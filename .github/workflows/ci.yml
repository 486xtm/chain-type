name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    strategy:
      matrix:
        node: ['16.x']
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8.1
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - run: pnpm install

      - run: pnpm build
      - run: pnpm lint
      - run: pnpm no-git-changes # ensure that committed types are up to date

  test:
    strategy:
      # When set to true, GitHub cancels all in-progress jobs if any matrix job fails.
      fail-fast: false
      matrix:
        node: ['16.x']
        os: [
          ubuntu-latest
        # , windows-latest # disabled windows builds due to stability issues
        ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8.1
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - run: pnpm install

      - run: pnpm build
      - run: pnpm test
      - run: pnpm format # do it at the very end because "pnpm test" can generate types (which should be formatted)
        if: runner.os == 'Linux'
      - run: pnpm typecheck # this has to happen after pnpm test b/c test does type generation
      - run: pnpm no-git-changes # ensure that committed types are up to date
        if: runner.os == 'Linux'

  test-examples:
    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8.1
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - run: pnpm install
        # Second install is needed to link bin files that were created only after build (post install hook to first pnpm install)
      - run: pnpm install

      - run: pnpm check-examples
      - run: pnpm no-git-changes # ensure that committed types are up to date
        if: runner.os == 'Linux'
# Few tips github actions
# - name: Setup SSH debug session
#   uses: mxschmitt/action-tmate@v2

