/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { ContractWithLibrary } from "./ContractWithLibrary";

export class ContractWithLibraryFactory extends ContractFactory {
  constructor(linkLibraryAddresses: ContractWithLibraryLibraryAddresses, signer?: Signer) {
    super(_abi, ContractWithLibraryFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: ContractWithLibraryLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\./ContractWithLibrary\\.sol:TestLibrar__", "g"),
      linkLibraryAddresses["__./ContractWithLibrary.sol:TestLibrar__"]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  deploy(): Promise<ContractWithLibrary> {
    return super.deploy() as Promise<ContractWithLibrary>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): ContractWithLibrary {
    return super.attach(address) as ContractWithLibrary;
  }
  connect(signer: Signer): ContractWithLibraryFactory {
    return super.connect(signer) as ContractWithLibraryFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ContractWithLibrary {
    return new Contract(address, _abi, signerOrProvider) as ContractWithLibrary;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "val",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_val",
        type: "uint256",
      },
    ],
    name: "setVal",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061022f806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633c6bb436146100515780633d4197f01461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100af565b005b60005481565b73__./ContractWithLibrary.sol:TestLibrar__63b7203ec673__./ContractWithLibrary.sol:TestLibrar__63b7203ec6846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b15801561013457600080fd5b505af4158015610148573d6000803e3d6000fd5b505050506040513d602081101561015e57600080fd5b81019080805190602001909291905050506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b1580156101bf57600080fd5b505af41580156101d3573d6000803e3d6000fd5b505050506040513d60208110156101e957600080fd5b8101908080519060200190929190505050600081905550505600a165627a7a7230582005568097bdc9a3238da200da3fa3ec47b6c7dd9372def274300dc29f83bd859b0029";

export interface ContractWithLibraryLibraryAddresses {
  ["__./ContractWithLibrary.sol:TestLibrar__"]: string;
}
